// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabNavigation renders tabnavigation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        pointerEvents="auto"
        removeClippedSubviews={false}
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            null,
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#181b20",
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "flex": 1,
                      "fontFamily": "Nunito-Bold",
                      "fontSize": 25,
                      "marginTop": "5%",
                    }
                  }
                >
                  Welcome to Battle Beasts!
                </Text>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 4,
                      "justifyContent": "center",
                    }
                  }
                >
                  <Image
                    source={
                      Object {
                        "process": [Function],
                      }
                    }
                    style={
                      Object {
                        "height": 135,
                        "marginTop": "10%",
                        "width": 177,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 2,
                  }
                }
              >
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#3dcec1",
                        "borderRadius": 10,
                        "flexShrink": 0,
                        "justifyContent": "center",
                        "marginTop": "10%",
                        "minHeight": "20%",
                        "minWidth": "80%",
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#36393e",
                          "fontFamily": "Nunito-Bold",
                          "fontSize": 23,
                        }
                      }
                    >
                      PLAY RANKED!
                    </Text>
                  </View>
                </RNGestureHandlerButton>
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#3dcec1",
                        "borderRadius": 10,
                        "flexShrink": 0,
                        "justifyContent": "center",
                        "marginTop": "10%",
                        "minHeight": "20%",
                        "minWidth": "80%",
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#36393e",
                          "fontFamily": "Nunito-Bold",
                          "fontSize": 23,
                        }
                      }
                    >
                      PLAY UNRANKED!
                    </Text>
                  </View>
                </RNGestureHandlerButton>
                <RNGestureHandlerButton
                  collapsable={false}
                  onGestureEvent={[Function]}
                  onGestureHandlerEvent={[Function]}
                  onGestureHandlerStateChange={[Function]}
                  onHandlerStateChange={[Function]}
                  rippleColor={0}
                >
                  <View
                    accessible={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#3dcec1",
                        "borderRadius": 10,
                        "flexShrink": 0,
                        "justifyContent": "center",
                        "marginTop": "10%",
                        "minHeight": "20%",
                        "minWidth": "80%",
                        "opacity": 1,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#36393e",
                          "fontFamily": "Nunito-Bold",
                          "fontSize": 23,
                        }
                      }
                    >
                      PLAY AGAINST A BOT!
                    </Text>
                  </View>
                </RNGestureHandlerButton>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="auto"
      style={
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderTopColor": "rgb(216, 216, 216)",
          "borderTopWidth": 0.5,
          "bottom": 0,
          "elevation": 8,
          "height": 49,
          "left": 0,
          "paddingBottom": 0,
          "paddingHorizontal": 0,
          "position": null,
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityLabel="Home, tab, 1 of 4"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "selected": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "#3dcec1",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
        <View
          accessibilityLabel="DeckManagerNavigator, tab, 2 of 4"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
        <View
          accessibilityLabel="Leaderboard, tab, 3 of 4"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
        <View
          accessibilityLabel="About, tab, 4 of 4"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 25,
                    "position": "absolute",
                    "width": "100%",
                  },
                  Object {
                    "opacity": 1,
                  },
                ]
              }
            >
              <Image
                resizeMode="contain"
                source={
                  Object {
                    "process": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 28,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
